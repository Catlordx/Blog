import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as l,c as u,a as n,d as a,w as e,b as s,f as p}from"./app-QtFXmfU1.js";const r="/Blog/assets/image-20240201143514819-_3YKxVoq.png",k="/Blog/assets/image-20240201144713015-HjPbAiu6.png",d="/Blog/assets/image-20240201145117358-h2Iy8qVX.png",m="/Blog/assets/image-20240201145206986-h67irsft.png",v="/Blog/assets/image-20240201145305269-SgqIHdAT.png",g="/Blog/assets/image-20240201170028032-RiMljsnr.png",b="/Blog/assets/image-20240201170546761-M1RAxcqy.png",y="/Blog/assets/image-20240201202637747-1TprVuWg.png",h="/Blog/assets/image-20240201203319587-ozp84L6q.png",w="/Blog/assets/securitycontextholder-QCtubVRT.png",f="/Blog/assets/loginurlauthenticationentrypoint-X2uQ_hCY.png",S="/Blog/assets/image-20240201212635384-lT-mW90C.png",x="/Blog/assets/image-20240201223044664-gWEdxgyl.png",_="/Blog/assets/image-20240201222008791-UhCl-bQ3.png",q="/Blog/assets/image-20240201225617838-2ZXWSFgI.png",F={},C=n("h1",{id:"springsecurity",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springsecurity"},[n("span",null,"SpringSecurity")])],-1),U={class:"table-of-contents"},I=p('<p>版本配置：</p><blockquote><ul><li>SpringBoot : 3.2.2</li><li>SpringSecurity : 6.2.0</li><li>JDK : 17</li><li>MySQL : 8.0.35</li></ul></blockquote><p>SpringSecurity官方文档</p><p>https://docs.spring.io/spring-security/reference/index.html</p><p>SpringSecurity官方示例</p><p>https://github.com/spring-projects/spring-sec</p><h2 id="一-springsecurity简述" tabindex="-1"><a class="header-anchor" href="#一-springsecurity简述"><span>一. SpringSecurity简述</span></a></h2><figure><img src="'+r+'" alt="image-20240201143514819" tabindex="0" loading="lazy"><figcaption>image-20240201143514819</figcaption></figure><p>Spring Security 是一个提供<code>身份验证</code>、<code>授权</code>和<code>针对常见攻击的保护</code>的框架。 凭借对保护命令式和反应式应用程序的一流支持，它成为保护基于 Spring 的应用程序的事实上的标准。</p><ul><li><p>身份认证：是指确认用户身份是否有效的过程，确保用户是其声称的那个人，并且具有访问系统资源的权限。</p><p>Spring Security 提供了各种身份认证的方式和机制，包括但不限于：</p><ol><li><strong>基于表单的认证：</strong> 用户通过输入用户名和密码来进行身份验证，通常在 Web 应用程序中使用。</li><li><strong>HTTP 基本认证和摘要认证：</strong> 基于 HTTP 协议的基本身份认证和摘要身份认证。</li><li><strong>OAuth 认证：</strong> 支持 OAuth 协议，允许用户通过第三方身份提供者进行身份验证。</li><li><strong>JWT 认证：</strong> 使用 JSON Web Token（JWT）进行身份验证和授权。</li><li><strong>LDAP 认证：</strong> 通过 Lightweight Directory Access Protocol（LDAP）进行身份验证，常用于企业环境中集中管理用户身份。</li><li><strong>CAS 认证：</strong> 使用 Central Authentication Service（CAS）进行单点登录和身份验证。</li></ol></li><li><p>授权：用户身份认证完成后，SpringSecurity能够控制用户所能够访问的资源</p></li><li><p>防御常见攻击：</p><ul><li>CSRF</li></ul></li></ul><h2 id="二、第一个springsecurity程序" tabindex="-1"><a class="header-anchor" href="#二、第一个springsecurity程序"><span>二、第一个SpringSecurity程序</span></a></h2><p>项目结构：</p><figure><img src="'+k+`" alt="image-20240201144713015" tabindex="0" loading="lazy"><figcaption>image-20240201144713015</figcaption></figure><p>pom.xml</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>SpringSecurityLearn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>SpringSecurityLearn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">&gt;</span></span>SpringSecurityLearn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-security-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IndexController</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目后会跳转到如下页面：</p><figure><img src="`+d+'" alt="image-20240201145117358" tabindex="0" loading="lazy"><figcaption>image-20240201145117358</figcaption></figure><ul><li><p>Username：user</p></li><li><p>Password：在控制台自动生成(很明显这是一个UUID格式)</p><figure><img src="'+m+'" alt="image-20240201145206986" tabindex="0" loading="lazy"><figcaption>image-20240201145206986</figcaption></figure></li></ul><p>正确输入两项之后便能够得到如下结果：</p><figure><img src="'+v+'" alt="image-20240201145305269" tabindex="0" loading="lazy"><figcaption>image-20240201145305269</figcaption></figure><p>登录页面渲染异常或者无法页面卡死无法进入等页面，则是由于SpringSecurity自动为我们生成的登陆页面中的bootstra.min.css资源无法加载导致的，需要科学。</p><h2 id="三、springsecurity底层原理" tabindex="-1"><a class="header-anchor" href="#三、springsecurity底层原理"><span>三、SpringSecurity底层原理</span></a></h2><h3 id="_3-1-filter复习" tabindex="-1"><a class="header-anchor" href="#_3-1-filter复习"><span>3.1 Filter复习</span></a></h3><p>Spring Security 的 Servlet 支持是基于 Servlet Filter 的。下图显示了单个 HTTP 请求的处理程序的典型分层。</p><figure><img src="https://docs.spring.io/spring-security/reference/_images/servlet/architecture/filterchain.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure>',27),j=n("code",null,"FilterChain",-1),D=n("code",null,"Filter",-1),L=n("code",null,"Servlet",-1),A=n("code",null,"HttpServletRequest",-1),R={href:"https://docs.spring.io/spring-framework/docs/6.1.0-M2/reference/html/web.html#mvc-servlet",target:"_blank",rel:"noopener noreferrer"},T=n("code",null,"DispatcherServlet",-1),P=n("code",null,"Servlet",-1),M=n("code",null,"HttpServletRequest",-1),B=n("code",null,"HttpServletResponse",-1),E=n("code",null,"Filter",-1),O=p('<ul><li>防止下游的 <code>Filter</code> 实例或 <code>Servlet</code> 被调用。在这种情况下，<code>Filter</code> 通常会使用 <code>HttpServletResponse</code> 对客户端写入响应。</li><li>修改下游的 <code>Filter</code> 实例和 <code>Servlet</code> 所使用的 <code>HttpServletRequest</code> 或 <code>HttpServletResponse</code>。</li></ul><blockquote><p>前面的IndexController底层实际上正是Servlet</p></blockquote><p>一般情况下都是采用SpringBoot来集成SpringSecurity，而SpringBoot底层还是Spring那一套，因此我们很自然的想到可以将过滤器实例作为Bean交给Spring上下文管理。那么在对Filter的使用上就会更加灵活。</p><h3 id="_3-2-delegatingfilterproxy" tabindex="-1"><a class="header-anchor" href="#_3-2-delegatingfilterproxy"><span>3.2 DelegatingFilterProxy</span></a></h3>',4),N={href:"https://docs.spring.io/spring-framework/docs/6.1.0-M2/javadoc-api/org/springframework/web/filter/DelegatingFilterProxy.html",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"DelegatingFilterProxy",-1),W=n("code",null,"Filter",-1),H=n("code",null,"ApplicationContext",-1),Q=n("code",null,"Filter",-1),G=n("code",null,"DelegatingFilterProxy",-1),$=n("code",null,"Filter",-1),J=p(`<p>下面是 <code>DelegatingFilterProxy</code> 如何融入 Filter实例和FilterChain</p><figure><img src="https://springdoc.cn/spring-security/_images/servlet/architecture/delegatingfilterproxy.png" alt="委托代理过滤器" tabindex="0" loading="lazy"><figcaption>委托代理过滤器</figcaption></figure><p>例如上图，DelegatingFilterProxy从ApplicationContext中查找到Bean Filter<sub>0</sub>，然后待用Bean Filter<sub>0</sub>。</p><p>也就是说，它允许延迟查找Filter Bean实例。在容器启动之前，容器需要注册Filter实例。然而，Spring通常使用ContextLoaderListener来加载Spring Bean，这在需要注册Filter实例之后才会完成。</p><p>DelegatingFilterProxy的伪码</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span><span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span><span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">Filter</span> delegate <span class="token operator">=</span> <span class="token function">getFilterBean</span><span class="token punctuation">(</span>someBeanName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    delegate<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>DelegatingFilterProxy就是一个Filter可以被注册在Servlet的过滤器链中，然后注册在Spring容器中的Bean Filter就可以被DelegatinFilterProxy调用，从而工作在整个Servlet生命周期中。</p></blockquote><p>这么做，对于Filter的启用等操作就会方便灵活很多。</p><h3 id="_3-3-filterchainproxy" tabindex="-1"><a class="header-anchor" href="#_3-3-filterchainproxy"><span>3.3 FilterChainProxy</span></a></h3><p>Spring Security 的 Servlet 支持包含在 <code>FilterChainProxy</code> 中。<code>FilterChainProxy</code> 是 Spring Security 提供的一个特殊的 <code>Filter</code>，允许通过 <code>SecurityFilterChain</code>委托给许多 <code>Filter</code> 实例。由于 FilterChainProxy是一个Bean，它通常被包裹在 DelegatingFilterProxy中。</p><figure><img src="https://springdoc.cn/spring-security/_images/servlet/architecture/filterchainproxy.png" alt="FilterChainProxy" tabindex="0" loading="lazy"><figcaption>FilterChainProxy</figcaption></figure><h3 id="_3-4-securityfilterchain" tabindex="-1"><a class="header-anchor" href="#_3-4-securityfilterchain"><span>3.4 SecurityFilterChain</span></a></h3><blockquote><p>实际应用情况</p></blockquote><p><img src="https://springdoc.cn/spring-security/_images/servlet/architecture/securityfilterchain.png" alt="SecurityFilterChain" loading="lazy">)</p><p>SecurityFilterChain被FilterChainProxy用来确定当前请求应该调用哪些Spring Security Filter实例</p><p><code>SecurityFilterChain</code> 中的 <code>Security Filter</code> 通常是<code>Bean</code>，但它们是用 <code>FilterChainProxy</code> 而不是 <code>DelegatingFilterProxy </code>注册的。与直接向Servlet容器或 <code>DelegatingFilterProxy </code>注册相比，<code>FilterChainProxy</code> 有很多优势。首先，它为 Spring Security 的所有 Servlet 支持提供了一个起点。由于这个原因，如果你试图对 Spring Security 的 Servlet 支持进行故障诊断，在 <code>FilterChainProxy</code> 中添加一个调试点是一个很好的开始。</p>`,16),V=n("code",null,"FilterChainProxy",-1),Z=n("code",null,"SecurityContext",-1),Y={href:"https://springdoc.cn/spring-security/servlet/exploits/firewall.html#servlet-httpfirewall",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"HttpFirewall",-1),X=p(`<p>此外，它在确定何时应该调用 <code>SecurityFilterChain</code> 方面提供了更大的灵活性。在Servlet容器中，<code>Filter</code> 实例仅基于URL被调用。 然而，<code>FilterChainProxy</code> 可以通过使用 <code>RequestMatcher</code> 接口，根据 <code>HttpServletRequest</code> 中的任何内容确定调用。</p><p>下图为多SecurityFilterChain实例。</p><figure><img src="https://springdoc.cn/spring-security/_images/servlet/architecture/multi-securityfilterchain.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>FilterChainProxy会根据请求决定使用哪个SecurityFilterChain，而且最多调用一个。如果请求的URL是/api/message/，那么<mark>按顺序来</mark>它首先与SpringSecurity<sub>n0</sub>相匹配，尽管他还和最后一个SecurityFilterChain匹配，但是FilterChainProxy仍然只调用<mark>第一次模式匹配的SecurityFilterChain</mark>即n0。</p><h2 id="四、defaultsecurityfilterchain" tabindex="-1"><a class="header-anchor" href="#四、defaultsecurityfilterchain"><span>四、DefaultSecurityFilterChain</span></a></h2><h3 id="_4-1-简要分析" tabindex="-1"><a class="header-anchor" href="#_4-1-简要分析"><span>4.1 简要分析</span></a></h3><p>首先在IDEA中搜索DefaultSecurityFilterChain</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/*
 * Copyright 2002-2021 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</span>

<span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Arrays</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">Filter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletRequest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">Log</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>logging<span class="token punctuation">.</span></span><span class="token class-name">LogFactory</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span>log<span class="token punctuation">.</span></span><span class="token class-name">LogMessage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>web<span class="token punctuation">.</span>util<span class="token punctuation">.</span>matcher<span class="token punctuation">.</span></span><span class="token class-name">RequestMatcher</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Standard implementation of <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SecurityFilterChain</span></span></span><span class="token punctuation">}</span>.
 *
 * <span class="token keyword">@author</span> Luke Taylor
 * <span class="token keyword">@since</span> 3.1
 */</span>
<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">DefaultSecurityFilterChain</span> <span class="token keyword">implements</span> <span class="token class-name">SecurityFilterChain</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">DefaultSecurityFilterChain</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RequestMatcher</span> requestMatcher<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Filter</span><span class="token punctuation">&gt;</span></span> filters<span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">DefaultSecurityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">RequestMatcher</span> requestMatcher<span class="token punctuation">,</span> <span class="token class-name">Filter</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> filters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">(</span>requestMatcher<span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">DefaultSecurityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">RequestMatcher</span> requestMatcher<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Filter</span><span class="token punctuation">&gt;</span></span> filters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>filters<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">LogMessage</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Will not secure %s&quot;</span><span class="token punctuation">,</span> requestMatcher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token class-name">LogMessage</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Will secure %s with %s&quot;</span><span class="token punctuation">,</span> requestMatcher<span class="token punctuation">,</span> filters<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>requestMatcher <span class="token operator">=</span> requestMatcher<span class="token punctuation">;</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>filters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>filters<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">RequestMatcher</span> <span class="token function">getRequestMatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requestMatcher<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Filter</span><span class="token punctuation">&gt;</span></span> <span class="token function">getFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filters<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">matches</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requestMatcher<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; [RequestMatcher=&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>requestMatcher <span class="token operator">+</span> <span class="token string">&quot;, Filters=&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filters
				<span class="token operator">+</span> <span class="token string">&quot;]&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动SpringBoot项目，发现在控制台打印了这样一条语句</p><figure><img src="`+g+'" alt="image-20240201170028032" tabindex="0" loading="lazy"><figcaption>image-20240201170028032</figcaption></figure><p>后面的具体内容为：</p><p>Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@409a76d4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e768587, org.springframework.security.web.context.SecurityContextHolderFilter@5c0bb8a, org.springframework.security.web.header.HeaderWriterFilter@82d2d7c, org.springframework.web.filter.CorsFilter@244d6082, org.springframework.security.web.csrf.CsrfFilter@7a39e757, org.springframework.security.web.authentication.logout.LogoutFilter@11a10c17, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@494c89b2, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5c9f48fa, org.springframework.security.web.authentication.ui.DefaultLogoutPageGeneratingFilter@fae6ead, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@231bb139, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9d27d01, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c212ae2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1c91955a, org.springframework.security.web.access.ExceptionTranslationFilter@1b82d3af, org.springframework.security.web.access.intercept.AuthorizationFilter@5b7bcedf]</p><p>这些内容的格式似乎有点眼熟？</p><figure><img src="'+b+`" alt="image-20240201170546761" tabindex="0" loading="lazy"><figcaption>image-20240201170546761</figcaption></figure><p>构造方法的调用顺序是显而易见的，默认过滤器链中也能清楚的看到16个Filter。</p><h3 id="_4-2-修改默认配置" tabindex="-1"><a class="header-anchor" href="#_4-2-修改默认配置"><span>4.2 修改默认配置</span></a></h3><blockquote><p>默认过滤器链当然不可能完全符合使用需求，因此有必要对其进行一定的修改。</p></blockquote><p>首先，在之前访问项目资源的时候，必须先登录。登录的默认账号是user，密码是控制台输出的一个字符串。关于默认用户的用户名和密码实际上是在一个类<code>SecurityProperties</code>中定义的。</p><p>这个类的主要作用是为Spring Security提供默认的配置属性，并且允许开发者在应用程序中进行自定义配置。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/*
 * Copyright 2012-2023 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</span>

<span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>security</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">EnumSet</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">UUID</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>context<span class="token punctuation">.</span>properties<span class="token punctuation">.</span></span><span class="token class-name">ConfigurationProperties</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span></span><span class="token class-name">DispatcherType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>filter<span class="token punctuation">.</span></span><span class="token class-name">OrderedFilter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">Ordered</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * Configuration properties for Spring Security.
 *
 * <span class="token keyword">@author</span> Dave Syer
 * <span class="token keyword">@author</span> Andy Wilkinson
 * <span class="token keyword">@author</span> Madhura Bhave
 * <span class="token keyword">@since</span> 1.0.0
 */</span>
<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span>prefix <span class="token operator">=</span> <span class="token string">&quot;spring.security&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityProperties</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/**
	 * Order applied to the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SecurityFilterChain</span></span></span><span class="token punctuation">}</span> that is used to configure basic
	 * authentication for application endpoints. Create your own
	 * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SecurityFilterChain</span></span></span><span class="token punctuation">}</span> if you want to add your own authentication for all or
	 * some of those endpoints.
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">BASIC_AUTH_ORDER</span> <span class="token operator">=</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token constant">LOWEST_PRECEDENCE</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Order applied to the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">WebSecurityCustomizer</span></span></span><span class="token punctuation">}</span> that ignores standard static
	 * resource paths.
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">IGNORED_ORDER</span> <span class="token operator">=</span> <span class="token class-name">Ordered</span><span class="token punctuation">.</span><span class="token constant">HIGHEST_PRECEDENCE</span><span class="token punctuation">;</span>

	<span class="token doc-comment comment">/**
	 * Default order of Spring Security&#39;s Filter in the servlet container (i.e. amongst
	 * other filters registered with the container). There is no connection between this
	 * and the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@Order</span></span></span><span class="token punctuation">}</span> on a <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">SecurityFilterChain</span></span></span><span class="token punctuation">}</span>.
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> <span class="token constant">DEFAULT_FILTER_ORDER</span> <span class="token operator">=</span> <span class="token class-name">OrderedFilter</span><span class="token punctuation">.</span><span class="token constant">REQUEST_WRAPPER_FILTER_MAX_ORDER</span> <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Filter</span> filter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">public</span> <span class="token class-name">User</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>user<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">Filter</span> <span class="token function">getFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>filter<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>

		<span class="token doc-comment comment">/**
		 * Security filter chain order for Servlet-based web applications.
		 */</span>
		<span class="token keyword">private</span> <span class="token keyword">int</span> order <span class="token operator">=</span> <span class="token constant">DEFAULT_FILTER_ORDER</span><span class="token punctuation">;</span>

		<span class="token doc-comment comment">/**
		 * Security filter chain dispatcher types for Servlet-based web applications.
		 */</span>
		<span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DispatcherType</span><span class="token punctuation">&gt;</span></span> dispatcherTypes <span class="token operator">=</span> <span class="token class-name">EnumSet</span><span class="token punctuation">.</span><span class="token function">allOf</span><span class="token punctuation">(</span><span class="token class-name">DispatcherType</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>order<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>order <span class="token operator">=</span> order<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DispatcherType</span><span class="token punctuation">&gt;</span></span> <span class="token function">getDispatcherTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>dispatcherTypes<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDispatcherTypes</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DispatcherType</span><span class="token punctuation">&gt;</span></span> dispatcherTypes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>dispatcherTypes <span class="token operator">=</span> dispatcherTypes<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>

		<span class="token doc-comment comment">/**
		 * Default user name.
		 */</span>
		<span class="token keyword">private</span> <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;user&quot;</span><span class="token punctuation">;</span>

		<span class="token doc-comment comment">/**
		 * Password for the default user name.
		 */</span>
		<span class="token keyword">private</span> <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token doc-comment comment">/**
		 * Granted roles for the default user name.
		 */</span>
		<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">private</span> <span class="token keyword">boolean</span> passwordGenerated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

		<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> password<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasLength</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>passwordGenerated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getRoles</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>roles<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setRoles</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> roles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>roles <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>roles<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isPasswordGenerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>passwordGenerated<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以清楚的看到有一个内部类User，name属性为&quot;user&quot;，password是通过UUID类生成的。</p><figure><img src="`+y+'" alt="image-20240201202637747" tabindex="0" loading="lazy"><figcaption>image-20240201202637747</figcaption></figure><p>可以在SpringBoot的配置文件中修改</p><p>SpringBoot3.2.2的默认的全局配置文件是application.properties，并且其内容为空，这是因为SpringBoot实际上底层已经把相关的配置都配置好了，当我们修改配置文件进行配置时，会修改SpringBoot自动配置的默认值。</p><p>项目采用yml格式，即：</p><figure><img src="'+h+`" alt="image-20240201203319587" tabindex="0" loading="lazy"><figcaption>image-20240201203319587</figcaption></figure><p>下面配置默认用户名和密码：</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">Spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">security</span><span class="token punctuation">:</span>
    <span class="token key atrule">user</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;jianwen&#39;</span>
      <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;050131&#39;</span>
      
<span class="token comment"># 等价于在properties中写入</span>
<span class="token comment"># spring.security.user.name=jianwen</span>
<span class="token comment"># spring.security.user.password=050131</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动程序验证即可。</p><h2 id="五、-authentication" tabindex="-1"><a class="header-anchor" href="#五、-authentication"><span>五、 Authentication</span></a></h2><h3 id="_5-1-认证架构" tabindex="-1"><a class="header-anchor" href="#_5-1-认证架构"><span>5.1 认证架构</span></a></h3><ul><li><p><em><strong>SecurityContextHolder</strong></em> - <code>SecurityContextHolder</code> 是 <code>Spring Security</code> 存储 认证 用户细节的地方。</p></li><li><p><em><strong>SecurityContext</strong></em> - 是从 <code>SecurityContextHolder</code> 获得的，包含了当前认证用户的 Authentication （认证）。</p></li><li><p><em><strong>Authentication</strong></em> - 可以是 <code>AuthenticationManager</code> 的输入，以提供用户提供的认证凭证或来自 SecurityContext 的当前用户。</p></li><li><p><em><strong>GrantedAuthority</strong></em> - 在<code>Authentication</code>（认证）中授予委托人的一种权限（即role、scope等）。</p></li><li><p><em><strong>AuthenticationManager</strong></em> - 定义 <code>Spring Security</code> 的 <code>Filter</code> 如何执行 认证 的API。</p></li><li><p><em><strong>ProviderManager</strong></em> - 最常见的<code>AuthenticationManager</code>的实现。</p></li><li><p><em><strong>AuthenticationProvider</strong></em> - 由 <code>ProviderManager</code> 用于执行特定类型的认证。</p></li><li><p>用 <em><strong>AuthenticationEntryPoint</strong></em> 请求凭证 - 用于从客户端请求凭证（即重定向到登录页面，发送 WWW-Authenticate 响应，等等）。</p></li><li><p><em><strong>AbstractAuthenticationProcessingFilter</strong></em> - 一个用于认证的基本 <code>Filter</code>。这也让我们很好地了解了认证的高层流程以及各部分是如何协作的。</p></li></ul><figure><img src="`+w+'" alt="SecurityContextHolder" tabindex="0" loading="lazy"><figcaption>SecurityContextHolder</figcaption></figure><h3 id="_5-2-基于用户名-密码的认证" tabindex="-1"><a class="header-anchor" href="#_5-2-基于用户名-密码的认证"><span>5.2 基于用户名/密码的认证</span></a></h3><p>Spring Security为从HttpServletRequest读取用户名和密码提供了以下内置机制</p><ul><li>表单</li><li>Basic</li><li>Digest</li></ul><h4 id="_5-2-1-表单登录-form-login" tabindex="-1"><a class="header-anchor" href="#_5-2-1-表单登录-form-login"><span>5.2.1 表单登录（Form Login）</span></a></h4><figure><img src="'+f+'" alt="loginurlauthenticationentrypoint" tabindex="0" loading="lazy"><figcaption>loginurlauthenticationentrypoint</figcaption></figure><ol><li><p>首先，一个用户向并未对其授权的资源发出一个未经认证的请求</p></li><li><p>Spring Security的默认过滤器链中的AuthorizationFilter通过抛出一个AccessDeniedException来表明未经认证的请求被拒绝了。</p><p>AuthorizationFilter类的doFilter方法</p></li></ol><figure><img src="'+S+`" alt="image-20240201212635384" tabindex="0" loading="lazy"><figcaption>image-20240201212635384</figcaption></figure><h3 id="_5-3-基于数据库的用户认证" tabindex="-1"><a class="header-anchor" href="#_5-3-基于数据库的用户认证"><span>5.3 基于数据库的用户认证</span></a></h3><ul><li>首先创建数据库</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">--</span> 创建数据库
<span class="token constant">CREATE</span> <span class="token constant">DATABASE</span> \`security<span class="token operator">-</span>demo\`<span class="token punctuation">;</span>
<span class="token constant">USE</span> \`security<span class="token operator">-</span>demo\`<span class="token punctuation">;</span>

<span class="token operator">--</span> 创建用户表
<span class="token constant">CREATE</span> <span class="token constant">TABLE</span> \`user\`<span class="token punctuation">(</span>
	\`id\` <span class="token constant">INT</span> <span class="token constant">NOT</span> <span class="token constant">NULL</span> <span class="token constant">AUTO_INCREMENT</span> <span class="token class-name">PRIMARY</span> <span class="token constant">KEY</span><span class="token punctuation">,</span>
	\`username\` <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span> <span class="token punctuation">,</span>
	\`password\` <span class="token function">VARCHAR</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span> <span class="token class-name">DEFAULT</span> <span class="token constant">NULL</span><span class="token punctuation">,</span>
	\`enabled\` <span class="token constant">BOOLEAN</span> <span class="token class-name">NOT</span> <span class="token constant">NULL</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">--</span> 唯一索引
<span class="token constant">CREATE</span> <span class="token constant">UNIQUE</span> <span class="token constant">INDEX</span> \`user_username_uindex\` <span class="token constant">ON</span> \`user\`<span class="token punctuation">(</span>\`username\`<span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token operator">--</span> 插入用户数据<span class="token punctuation">(</span>密码是 <span class="token string">&quot;abc&quot;</span> <span class="token punctuation">)</span>
<span class="token constant">INSERT</span> <span class="token constant">INTO</span> \`user\` <span class="token punctuation">(</span>\`username\`<span class="token punctuation">,</span> \`password\`<span class="token punctuation">,</span> \`enabled\`<span class="token punctuation">)</span> <span class="token constant">VALUES</span>
<span class="token punctuation">(</span><span class="token char">&#39;admin&#39;</span><span class="token punctuation">,</span> &#39;<span class="token punctuation">{</span>bcrypt<span class="token punctuation">}</span>$<span class="token number">2</span>a$<span class="token number">10</span>$<span class="token class-name">GRLdNijSQMUvl</span><span class="token operator">/</span>au9ofL<span class="token punctuation">.</span>eDwmoohzzS7<span class="token punctuation">.</span>rmNSJZ<span class="token punctuation">.</span><span class="token number">0F</span>xO<span class="token operator">/</span><span class="token class-name">BTk76klW</span>&#39;<span class="token punctuation">,</span> <span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token char">&#39;Helen&#39;</span><span class="token punctuation">,</span> &#39;<span class="token punctuation">{</span>bcrypt<span class="token punctuation">}</span>$<span class="token number">2</span>a$<span class="token number">10</span>$<span class="token class-name">GRLdNijSQMUvl</span><span class="token operator">/</span>au9ofL<span class="token punctuation">.</span>eDwmoohzzS7<span class="token punctuation">.</span>rmNSJZ<span class="token punctuation">.</span><span class="token number">0F</span>xO<span class="token operator">/</span><span class="token class-name">BTk76klW</span>&#39;<span class="token punctuation">,</span> <span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">(</span><span class="token char">&#39;Tom&#39;</span><span class="token punctuation">,</span> &#39;<span class="token punctuation">{</span>bcrypt<span class="token punctuation">}</span>$<span class="token number">2</span>a$<span class="token number">10</span>$<span class="token class-name">GRLdNijSQMUvl</span><span class="token operator">/</span>au9ofL<span class="token punctuation">.</span>eDwmoohzzS7<span class="token punctuation">.</span>rmNSJZ<span class="token punctuation">.</span><span class="token number">0F</span>xO<span class="token operator">/</span><span class="token class-name">BTk76klW</span>&#39;<span class="token punctuation">,</span> <span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>然后引入相关依赖</li></ul><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-plus-spring-boot3-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.5.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>接着配置数据源，以及在控制台打印mybatis-plus日志</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">Spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">security</span><span class="token punctuation">:</span>
    <span class="token key atrule">user</span><span class="token punctuation">:</span>
      <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">&#39;jianwen&#39;</span>
      <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token string">&#39;050131&#39;</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/security<span class="token punctuation">-</span>demo
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> myyx7731526
<span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>
  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>
    <span class="token key atrule">log-impl</span><span class="token punctuation">:</span> org.apache.ibatis.logging.stdout.StdOutImpl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>创建entity包，以及User实体类</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">IdType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">TableId</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@TableId</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>type <span class="token operator">=</span> <span class="token class-name">IdType</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>
    <span class="token comment">// 属性名和表中对应的字段名相同就无需再写注解了</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> username<span class="token punctuation">;</span>
    
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>
    
    <span class="token keyword">private</span> <span class="token class-name">Boolean</span> enabled<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建mapper和service包，并在service包中创建impl包</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>mapper</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">BaseMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token keyword">extends</span> <span class="token class-name">BaseMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserService</span> <span class="token keyword">extends</span> <span class="token class-name">IService</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>extension<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">ServiceImpl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServiceImpl</span> <span class="token keyword">extends</span> <span class="token class-name">ServiceImpl</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserMapper</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">UserService</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建UserMapper.xml</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> encoding<span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span><span class="token operator">?</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token constant">DOCTYPE</span> mapper <span class="token constant">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>mapper namespace<span class="token operator">=</span><span class="token string">&quot;package com.example.springsecuritylearn.mapper&quot;</span><span class="token operator">&gt;</span>

<span class="token operator">&lt;</span><span class="token operator">/</span>mapper<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目结构如下</p><figure><img src="`+x+`" alt="image-20240201223044664" tabindex="0" loading="lazy"><figcaption>image-20240201223044664</figcaption></figure><p>创建UserController</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">UserService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">public</span> <span class="token class-name">UserService</span> userService<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">getUserList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> userService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目报错：</p><figure><img src="`+_+`" alt="image-20240201222008791" tabindex="0" loading="lazy"><figcaption>image-20240201222008791</figcaption></figure><p>这是因为mybatis-plus针对于SpringBoot的适配做的还不是很好，修改pom文件即可</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>spring<span class="token operator">-</span>boot3<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.5</span><span class="token number">.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>exclusions<span class="token punctuation">&gt;</span></span>
                <span class="token generics"><span class="token punctuation">&lt;</span>exclusion<span class="token punctuation">&gt;</span></span>
                    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
                    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>spring<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span><span class="token operator">/</span>exclusion<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>exclusions<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
            <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>mybatis<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>spring<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
            <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.0</span><span class="token number">.3</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动项目后，访问http://localhost:8080/user/list</p><p>注意此时登录输入的账号密码就必须是yml文件中所配置的。</p><p>即可获得</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;username&quot;</span><span class="token operator">:</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;password&quot;</span><span class="token operator">:</span><span class="token string">&quot;{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">&quot;username&quot;</span><span class="token operator">:</span><span class="token string">&quot;Helen&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;password&quot;</span><span class="token operator">:</span><span class="token string">&quot;{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">&quot;username&quot;</span><span class="token operator">:</span><span class="token string">&quot;Tom&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;password&quot;</span><span class="token operator">:</span><span class="token string">&quot;{bcrypt}$2a$10$GRLdNijSQMUvl/au9ofL.eDwmoohzzS7.rmNSJZ.0FxO/BTk76klW&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>增加config包</p><p>创建DBUserDetailsManager类和WebSecurityConfig类</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSecurityConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDetailsService</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DBUserDetailsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">QueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>springsecuritylearn<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">jakarta<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Resource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span></span><span class="token class-name">GrantedAuthority</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span><span class="token class-name">UserDetails</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span><span class="token class-name">UserDetailsPasswordService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span><span class="token class-name">UsernameNotFoundException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>provisioning<span class="token punctuation">.</span></span><span class="token class-name">UserDetailsManager</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Collection</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBUserDetailsManager</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsManager</span><span class="token punctuation">,</span> <span class="token class-name">UserDetailsPasswordService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Resource</span>
    <span class="token keyword">public</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token class-name">DBUserDetailsManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDetails</span> <span class="token function">updatePassword</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> user<span class="token punctuation">,</span> <span class="token class-name">String</span> newPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createUser</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateUser</span><span class="token punctuation">(</span><span class="token class-name">UserDetails</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">changePassword</span><span class="token punctuation">(</span><span class="token class-name">String</span> oldPassword<span class="token punctuation">,</span> <span class="token class-name">String</span> newPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">userExists</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">UserDetails</span> <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UsernameNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userQueryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        userQueryWrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> user <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>userQueryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">UsernameNotFoundException</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrantedAuthority</span><span class="token punctuation">&gt;</span></span> authorities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>security<span class="token punctuation">.</span>core<span class="token punctuation">.</span>userdetails<span class="token punctuation">.</span></span>User</span><span class="token punctuation">(</span>
                    user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    user<span class="token punctuation">.</span><span class="token function">getEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token boolean">true</span><span class="token punctuation">,</span>
                    <span class="token boolean">true</span><span class="token punctuation">,</span>
                    <span class="token boolean">true</span><span class="token punctuation">,</span>
                    authorities
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意此时启动项目后就不能够用yml配置文件中的用户名和密码登录，它被DBUserDetailsManager给覆盖掉了</p><p>但实际上此处无需WebSecurityConfig类，将其删掉后在DBUserDetailsManager类上打上@Component注解即可 最终项目结构</p><figure><img src="`+q+'" alt="image-20240201225617838" tabindex="0" loading="lazy"><figcaption>image-20240201225617838</figcaption></figure><h2 id="六、authorization" tabindex="-1"><a class="header-anchor" href="#六、authorization"><span>六、Authorization</span></a></h2><p>Spring Security支持的认证方式有很多种</p>',76);function nn(sn,an){const t=c("router-link"),o=c("ExternalLinkIcon");return l(),u("div",null,[C,n("nav",U,[n("ul",null,[n("li",null,[a(t,{to:"#一-springsecurity简述"},{default:e(()=>[s("一. SpringSecurity简述")]),_:1})]),n("li",null,[a(t,{to:"#二、第一个springsecurity程序"},{default:e(()=>[s("二、第一个SpringSecurity程序")]),_:1})]),n("li",null,[a(t,{to:"#三、springsecurity底层原理"},{default:e(()=>[s("三、SpringSecurity底层原理")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_3-1-filter复习"},{default:e(()=>[s("3.1 Filter复习")]),_:1})]),n("li",null,[a(t,{to:"#_3-2-delegatingfilterproxy"},{default:e(()=>[s("3.2 DelegatingFilterProxy")]),_:1})]),n("li",null,[a(t,{to:"#_3-3-filterchainproxy"},{default:e(()=>[s("3.3 FilterChainProxy")]),_:1})]),n("li",null,[a(t,{to:"#_3-4-securityfilterchain"},{default:e(()=>[s("3.4 SecurityFilterChain")]),_:1})])])]),n("li",null,[a(t,{to:"#四、defaultsecurityfilterchain"},{default:e(()=>[s("四、DefaultSecurityFilterChain")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_4-1-简要分析"},{default:e(()=>[s("4.1 简要分析")]),_:1})]),n("li",null,[a(t,{to:"#_4-2-修改默认配置"},{default:e(()=>[s("4.2 修改默认配置")]),_:1})])])]),n("li",null,[a(t,{to:"#五、-authentication"},{default:e(()=>[s("五、 Authentication")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_5-1-认证架构"},{default:e(()=>[s("5.1 认证架构")]),_:1})]),n("li",null,[a(t,{to:"#_5-2-基于用户名-密码的认证"},{default:e(()=>[s("5.2 基于用户名/密码的认证")]),_:1})]),n("li",null,[a(t,{to:"#_5-3-基于数据库的用户认证"},{default:e(()=>[s("5.3 基于数据库的用户认证")]),_:1})])])]),n("li",null,[a(t,{to:"#六、authorization"},{default:e(()=>[s("六、Authorization")]),_:1})])])]),I,n("p",null,[s("客户端向应用程序发送一个请求，容器创建一个 "),j,s("，其中包含 "),D,s(" 实例和 "),L,s("，应该根据请求URI的路径来处理 "),A,s("。在Spring MVC应用程序中，Servlet是 "),n("a",R,[T,a(o)]),s(" 的一个实例。一个 "),P,s(" 最多可以处理一个 "),M,s(" 和 "),B,s("。然而，可以使用多个 "),E,s(" 来完成如下工作。")]),O,n("p",null,[s("Spring 提供了一个名为 "),n("a",N,[z,a(o)]),s(" 的 "),W,s(" 实现，允许在 Servlet 容器的生命周期和 Spring 的 "),H,s(" 之间建立桥梁。Servlet容器允许通过使用自己的标准来注册 "),Q,s(" 实例，但它不知道 Spring 定义的 Bean。你可以通过标准的Servlet容器机制来注册 "),G,s("，但将所有工作委托给实现 "),$,s(" 的Spring Bean。")]),J,n("p",null,[s("其次，由于 "),V,s(" 是 Spring Security 使用的核心，它可以执行一些不被视为可有可无的任务。 例如，它清除了 "),Z,s(" 以避免内存泄漏。它还应用Spring Security的 "),n("a",Y,[K,a(o)]),s(" 来保护应用程序免受某些类型的攻击。")]),X])}const pn=i(F,[["render",nn],["__file","SpringSecurity.html.vue"]]),on=JSON.parse('{"path":"/posts/Java/SpringSecurity.html","title":"SpringSecurity","lang":"zh-CN","frontmatter":{"description":"SpringSecurity 版本配置： SpringBoot : 3.2.2 SpringSecurity : 6.2.0 JDK : 17 MySQL : 8.0.35 SpringSecurity官方文档 https://docs.spring.io/spring-security/reference/index.html SpringSecur...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/Blog/posts/Java/SpringSecurity.html"}],["meta",{"property":"og:title","content":"SpringSecurity"}],["meta",{"property":"og:description","content":"SpringSecurity 版本配置： SpringBoot : 3.2.2 SpringSecurity : 6.2.0 JDK : 17 MySQL : 8.0.35 SpringSecurity官方文档 https://docs.spring.io/spring-security/reference/index.html SpringSecur..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.spring.io/spring-security/reference/_images/servlet/architecture/filterchain.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-02-08T09:51:19.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"SpringSecurity"}],["meta",{"property":"article:author","content":"jianwen"}],["meta",{"property":"article:modified_time","content":"2024-02-08T09:51:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringSecurity\\",\\"image\\":[\\"https://docs.spring.io/spring-security/reference/_images/servlet/architecture/filterchain.png\\",\\"https://springdoc.cn/spring-security/_images/servlet/architecture/delegatingfilterproxy.png\\",\\"https://springdoc.cn/spring-security/_images/servlet/architecture/filterchainproxy.png\\",\\"https://springdoc.cn/spring-security/_images/servlet/architecture/securityfilterchain.png\\",\\"https://springdoc.cn/spring-security/_images/servlet/architecture/multi-securityfilterchain.png\\"],\\"dateModified\\":\\"2024-02-08T09:51:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jianwen\\",\\"url\\":\\"https://catlordx.github.io/Blog/\\"}]}"]]},"headers":[{"level":2,"title":"一. SpringSecurity简述","slug":"一-springsecurity简述","link":"#一-springsecurity简述","children":[]},{"level":2,"title":"二、第一个SpringSecurity程序","slug":"二、第一个springsecurity程序","link":"#二、第一个springsecurity程序","children":[]},{"level":2,"title":"三、SpringSecurity底层原理","slug":"三、springsecurity底层原理","link":"#三、springsecurity底层原理","children":[{"level":3,"title":"3.1 Filter复习","slug":"_3-1-filter复习","link":"#_3-1-filter复习","children":[]},{"level":3,"title":"3.2 DelegatingFilterProxy","slug":"_3-2-delegatingfilterproxy","link":"#_3-2-delegatingfilterproxy","children":[]},{"level":3,"title":"3.3 FilterChainProxy","slug":"_3-3-filterchainproxy","link":"#_3-3-filterchainproxy","children":[]},{"level":3,"title":"3.4  SecurityFilterChain","slug":"_3-4-securityfilterchain","link":"#_3-4-securityfilterchain","children":[]}]},{"level":2,"title":"四、DefaultSecurityFilterChain","slug":"四、defaultsecurityfilterchain","link":"#四、defaultsecurityfilterchain","children":[{"level":3,"title":"4.1 简要分析","slug":"_4-1-简要分析","link":"#_4-1-简要分析","children":[]},{"level":3,"title":"4.2 修改默认配置","slug":"_4-2-修改默认配置","link":"#_4-2-修改默认配置","children":[]}]},{"level":2,"title":"五、 Authentication","slug":"五、-authentication","link":"#五、-authentication","children":[{"level":3,"title":"5.1 认证架构","slug":"_5-1-认证架构","link":"#_5-1-认证架构","children":[]},{"level":3,"title":"5.2 基于用户名/密码的认证","slug":"_5-2-基于用户名-密码的认证","link":"#_5-2-基于用户名-密码的认证","children":[]},{"level":3,"title":"5.3 基于数据库的用户认证","slug":"_5-3-基于数据库的用户认证","link":"#_5-3-基于数据库的用户认证","children":[]}]},{"level":2,"title":"六、Authorization","slug":"六、authorization","link":"#六、authorization","children":[]}],"git":{"createdTime":1707385879000,"updatedTime":1707385879000,"contributors":[{"name":"jianwen","email":"shelly2140306@163.com","commits":1}]},"readingTime":{"minutes":12.81,"words":3844},"filePathRelative":"posts/Java/SpringSecurity.md","localizedDate":"2024年2月8日","excerpt":"\\n\\n<p>版本配置：</p>\\n<blockquote>\\n<ul>\\n<li>SpringBoot : 3.2.2</li>\\n<li>SpringSecurity : 6.2.0</li>\\n<li>JDK : 17</li>\\n<li>MySQL : 8.0.35</li>\\n</ul>\\n</blockquote>\\n<p>SpringSecurity官方文档</p>\\n<p>https://docs.spring.io/spring-security/reference/index.html</p>\\n<p>SpringSecurity官方示例</p>\\n<p>https://github.com/spring-projects/spring-sec</p>","autoDesc":true}');export{pn as comp,on as data};
